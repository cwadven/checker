name: Test

on:
  pull_request:
    # needs to create code-review branch
    branches: [ code-review ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379

      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nully
        ports:
          - 5432:5432

    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.11 ]

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
        DJANGO_SETTINGS_MODULE: config.settings.test

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Wait for Postgres
      run: |
        while ! pg_isready -h localhost -U postgres; do
          echo "Waiting for postgres..."
          sleep 1
        done

    - name: Set up Database Extension
      env:
        DJANGO_SETTINGS_MODULE: config.settings.test
        PGPASSWORD: postgres
      run: |
        psql -h localhost -U postgres -c "CREATE DATABASE nully_test;"
        psql -h localhost -U postgres -d nully_test -c "CREATE EXTENSION IF NOT EXISTS pg_trgm;"
        psql -h localhost -U postgres -d nully -c "CREATE EXTENSION IF NOT EXISTS pg_trgm;"

    - name: Install Dependencies
      env:
        DJANGO_SETTINGS_MODULE: config.settings.test
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Database Settings
      env:
        DJANGO_SETTINGS_MODULE: config.settings.test
      run: |
        python manage.py migrate --noinput

    - name: Run Tests
      env:
        DJANGO_SETTINGS_MODULE: config.settings.test
      run: |
        python manage.py test --keepdb
